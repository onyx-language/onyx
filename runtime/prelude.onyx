enum Result<R, E> {
    Ok(value: R),
    Err(value: E),
}

class Array<T> {
    private var m_data: [T];
    private var m_size: usize;
    public function create(data: [T]) -> raw Array<T> =>
        new Array<T>(data, sizeof data);
}

class String {
    private var m_data: [u8];
    private var m_length: usize;
    public function create(data: [u8]) -> raw String =>
        new String(data, sizeof data);
    public function length(this) -> usize => this->m_length;
}


function foo() -> Result<i32, String> {
    return Result::Ok<i32>(42);
}

function main(argc: i32, argv: raw raw char) -> i32 {
    return 0;
}
